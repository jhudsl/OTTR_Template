# Candace Savonen 2021
# Updated May 2024

name: Pull Request

on:
  pull_request:
    branches: [ main, staging ]

jobs:

  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

      # Delete the branch if this has been run before
      - name: Delete branch locally and remotely
        run: git push origin --delete preview-${{ github.event.pull_request.number }} || echo "No branch to delete"

      # Make the branch fresh
      - name: Make the branch fresh
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          branch_name='preview-${{ github.event.pull_request.number }}'
          echo branch doesnt exist
          git checkout -b $branch_name || echo branch exists
          git push --set-upstream origin $branch_name || echo branch exists remotely
        shell: bash


    outputs:
      toggle_website: "${{ env.RENDER_WEBSITE }}"
      toggle_spell_check: "${{ env.SPELL_CHECK }}"
      toggle_style_code: "${{ env.STYLE_CODE }}"
      toggle_url_check: "${{ env.URL_CHECKER }}"
      toggle_quiz_check: "${{ env.CHECK_QUIZZES }}"
      toggle_md_linter: "${{ env.MARKDOWN_LINTER }}"
      toggle_readability: "${{ env.READABILITY_REPORT }}"
      toggle_render_preview: "${{ env.RENDER_PREVIEW }}"
      rendering_docker_image: "${{ env.RENDERING_DOCKER_IMAGE }}"

########################## Make the error reports ##############################
  spell-check:
    name: Check spelling
    needs: yaml-check
    if: ${{needs.yaml-check.outputs.toggle_spell_check == 'yes'}}
    uses: jhudsl/ottr-reports/.github/workflows/report-maker.yml@main
    with:
      check_type: spelling
      error_min: 3
      branch_name: ${GITHUB_HEAD_REF}
    secrets:
      gh_pat: ${{ secrets.GH_PAT }}

  url-check:
    name: Check URLs
    needs: yaml-check
    if: ${{needs.yaml-check.outputs.toggle_url_check == 'yes'}}
    uses: jhudsl/ottr-reports/.github/workflows/report-maker.yml@main
    with:
      check_type: urls
      error_min: 0
      branch_name: ${GITHUB_HEAD_REF}
    secrets:
      gh_pat: ${{ secrets.GH_PAT }}

  quiz-check:
    name: Check quiz formatting
    if: ${{needs.yaml-check.outputs.toggle_quiz_check == 'yes'}}
    needs: yaml-check
    uses: jhudsl/ottr-reports/.github/workflows/report-maker.yml@main
    with:
      check_type: quiz_format
      error_min: 0
      branch_name: ${GITHUB_HEAD_REF}
    secrets:
      gh_pat: ${{ secrets.GH_PAT }}

############################# Style the code ###################################
  style-code:
    name: Style code
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_style_code == 'yes'}}
    container:
      image: jhudsl/base_ottr:main

    steps:
      - name: Checkout files
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run styler
        run: Rscript -e "styler::style_file(list.files(pattern = '(R|q)md$', recursive = FALSE, full.names = TRUE));warnings()"

      - name: Commit styled files
        run: |
          git config --system --add safe.directory "$GITHUB_WORKSPACE"
          git add \*md
          git commit -m 'Style *mds' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

############################# Check Markdown Formatting ###################################
  markdown-linter:
    name: Markdown linter
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_md_linter == 'yes'}}
    container:
      image: jhudsl/base_ottr:dev

    steps:
      - name: Checkout files
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          
      - name: Make the report
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          mkdir -p check_reports

          curl "https://github.com/DavidAnson/markdownlint-cli2/blob/af14a2e768b741b941255b4c6b875339b4acbb73/test/config-files/cfg/.markdownlint-cli2.jsonc" \
          -o resources/.markdownlint-cli2.jsonc

          markdownlint-cli2 "**/*.md" "#node_modules" \
          >> check_reports/markdown_lint_report.txt 2>&1
        continue-on-error: true

      # Commit the markdown report
      - name: Commit markdown report to preview branch
        id: commit
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          error_num=$(cat check_reports/markdown_lint_report.txt | wc -l)
          error_num="$((error_num-12))"
          echo "markdown_issues=$error_num" >> $GITHUB_OUTPUT
          git add check_reports/markdown_lint_report.txt --force
          git commit -m 'Add markdown report' || echo "No report to commit"
          git pull --rebase --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
          git push --force || echo "No report to commit"
        shell: bash

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes:

      - name: Build components of the comment
        id: build-components
        run: |
          report_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/check_reports/markdown_lint_report.txt")
          echo "time=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "commit_id=$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo ${{steps.commit.outputs.markdown_issues}}

      - name: Create or update comment
        if: steps.commit.outputs.markdown_issues > 4
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            [Markdown linter report here](${{ steps.build-components.outputs.report_link }})
            $(error_num) potential errors reported
            _Updated at ${{ steps.build-components.outputs.time }} with changes from the latest commit ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Comment if no changes
        if: steps.commit.outputs.markdown_issues > 4
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Markdown linter report did not find any issues!
            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

############################# Readability Report ###################################

  readability-report:
    name: Readability report
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_readability == 'yes'}}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Readability report
        uses: Rebilly/lexi@v2
        with:
          github-token: ${{ secrets.GH_PAT }}
          glob: '**/*.md'

############################# Render Preview ###################################

  render-preview:
    name: Render preview
    needs: yaml-check
    runs-on: ubuntu-latest
    container:
      image: ${{needs.yaml-check.outputs.rendering_docker_image}}
    if: ${{needs.yaml-check.outputs.toggle_render_preview == 'yes'}}

    steps:
      - name: Checkout files
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up git checkout
      - name: Set up git checkout
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }} --allow-unrelated-histories
        shell: bash

      # Run bookdown rendering
      - name: Run bookdown render
        id: bookdown
        if: ${{needs.yaml-check.outputs.toggle_website == 'rmd' }}
        run: Rscript -e "bookdown::render_book('index.Rmd', output_format = 'all')"

      # Run quarto rendering
      - name: Render quarto version
        id: quarto
        if: ${{needs.yaml-check.outputs.toggle_website == 'quarto' }}
        run: Rscript -e "quarto::quarto_render('.')"

      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on Rmd render steps
        if: ${{needs.yaml-check.outputs.toggle_website == 'rmd' }}
        run: |
          echo Bookdown status ${{steps.bookdown.outcome}}
          if [${{steps.bookdown.outcome}} != 'success']; then
            exit 1
          fi

      - name: Check on quarto render steps
        if: ${{needs.yaml-check.outputs.toggle_website == 'quarto' }}
        run: |
          echo Quarto status ${{steps.quarto.outcome}}
          if [${{steps.quarto.outcome}} != 'success']; then
            exit 1
          fi

      - name: Website preview for download
        run: zip website-preview.zip docs/* -r

      # Commit the rendered bookdown files
      - name: Commit rendered bookdown files to preview branch
        id: commit
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git diff origin/main -- docs >/dev/null && changes=true || changes=false
          echo "changes=$changes" >> $GITHUB_OUTPUT
          git add . --force
          git commit -m 'Render preview' || echo "No changes to commit"
          git pull --rebase --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
          git push --force || echo "No changes to commit"
        shell: bash

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: latest commit

      - name: Build components of the comment
        id: build-components
        run: |
          course_name=$(head -n 1 _bookdown.yml | cut -d'"' -f 2| tr " " "-")
          bookdown_link=$(echo "https://htmlpreview.github.io/?https://raw.githubusercontent.com/$GITHUB_REPOSITORY/preview-${{ github.event.pull_request.number }}/docs/index.html")
          docx_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/docs/$course_name.docx")
          zip_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/website-preview.zip")
          echo "zip_link=$zip_link" >> $GITHUB_OUTPUT
          echo "bookdown_link=$bookdown_link" >> $GITHUB_OUTPUT
          echo "docx_link=$docx_link" >> $GITHUB_OUTPUT
          echo "time=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "commit_id=$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo ${{steps.commit.outputs.changes}}

      - name: Create or update comment
        if: steps.commit.outputs.changes == 'true'
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Re-rendered previews from the latest commit:
            - :eyes: Quick [preview of course website here](${{ steps.build-components.outputs.bookdown_link }}) \*
            - :microscope: Comprehensive [download of the course website here](${{ steps.build-components.outputs.zip_link }})
            - Download the [.docx file](${{ steps.build-components.outputs.docx_link }})

            \* note not all html features will be properly displayed in the "quick preview" but it will give you a rough idea.

            _Updated at ${{ steps.build-components.outputs.time }} with changes from the latest commit ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Comment if no changes
        if: steps.commit.outputs.changes == 'false'
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            The latest commit did not produce rendering changes.

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace
